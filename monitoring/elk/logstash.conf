input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
  }
  
  udp {
    port => 5000
  }
}

filter {
  if [fields][service] == "demo-fiss" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    mutate {
      add_field => { "service_name" => "demo-fiss-api" }
      add_field => { "environment" => "production" }
    }
  }
  
  # Parse Flask logs
  if [message] =~ /.*Flask.*/ {
    grok {
      match => { "message" => "%{IP:client_ip} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATH:path} %{DATA:http_version}\" %{NUMBER:status_code} %{NUMBER:response_size}" }
    }
  }
  
  # Parse API endpoint logs
  if [message] =~ /.*\/api\/.*/ {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:endpoint_info}" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "demo-fiss-logs-%{+YYYY.MM.dd}"
  }
  
  stdout {
    codec => rubydebug
  }
}
