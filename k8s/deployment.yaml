apiVersion: apps/v1
kind: Deployment
metadata:
  name: {SERVICE_NAME}
  namespace: {NAMESPACE}
  labels:
    app: {SERVICE_NAME}
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: {SERVICE_NAME}
  template:
    metadata:
      labels:
        app: {SERVICE_NAME}
        version: v1.0.0
      annotations:
        argocd.argoproj.io/sync-wave: "0"
        timestamp: "{TIMESTAMP}"
    spec:
      containers:
      - name: {SERVICE_NAME}
        image: ghcr.io/{GH_OWNER}/{REPO_A}:{IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: {CONTAINER_PORT}
          name: http
        env:
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: {SERVICE_NAME}-config
              key: FLASK_ENV
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: {SERVICE_NAME}-config
              key: PYTHONUNBUFFERED
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: {HEALTH_PATH}
            port: {CONTAINER_PORT}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: {HEALTH_PATH}
            port: {CONTAINER_PORT}
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
